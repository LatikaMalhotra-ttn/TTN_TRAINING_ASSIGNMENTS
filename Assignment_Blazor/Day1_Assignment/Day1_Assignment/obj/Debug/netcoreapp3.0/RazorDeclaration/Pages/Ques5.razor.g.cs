#pragma checksum "C:\Users\Latika Malhotra\Desktop\Assignment_Blazor\Day1_Assignment\Day1_Assignment\Pages\Ques5.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "3a5c99af96c2c964505f5f7e7501b28b959e1568"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Day1_Assignment.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Latika Malhotra\Desktop\Assignment_Blazor\Day1_Assignment\Day1_Assignment\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Latika Malhotra\Desktop\Assignment_Blazor\Day1_Assignment\Day1_Assignment\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Latika Malhotra\Desktop\Assignment_Blazor\Day1_Assignment\Day1_Assignment\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Latika Malhotra\Desktop\Assignment_Blazor\Day1_Assignment\Day1_Assignment\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Latika Malhotra\Desktop\Assignment_Blazor\Day1_Assignment\Day1_Assignment\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Latika Malhotra\Desktop\Assignment_Blazor\Day1_Assignment\Day1_Assignment\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Latika Malhotra\Desktop\Assignment_Blazor\Day1_Assignment\Day1_Assignment\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Latika Malhotra\Desktop\Assignment_Blazor\Day1_Assignment\Day1_Assignment\_Imports.razor"
using Day1_Assignment;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Latika Malhotra\Desktop\Assignment_Blazor\Day1_Assignment\Day1_Assignment\_Imports.razor"
using Day1_Assignment.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Latika Malhotra\Desktop\Assignment_Blazor\Day1_Assignment\Day1_Assignment\_Imports.razor"
using System.Data;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/Ques5")]
    public partial class Ques5 : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 101 "C:\Users\Latika Malhotra\Desktop\Assignment_Blazor\Day1_Assignment\Day1_Assignment\Pages\Ques5.razor"
       



    public string input_field { get; set; } = "";

    public double Evaluate(string expr)
    {
        try
        {
            System.Data.DataTable table = new System.Data.DataTable();
            return Convert.ToDouble(table.Compute(expr, String.Empty));
        }
        catch(Exception ex)
        {
            throw ex;
        }

    }

    void MainPage()
    {
        _navigation.NavigateTo("/");
    }
    void zero()
    {
        try
        {

            if (input_field == "0" && input_field != null)
                input_field = "0";
            else
                input_field =input_field + "0";
        }
        catch(Exception ex)
        {
            input_field = "Error.Clear n try again";
        }

    }
    void one()
    {
        try
        {

            if (input_field == "0" && input_field != null)
                input_field = "1";
            else
                input_field = input_field + "1";
        }
        catch (Exception ex)
        {
            input_field = "Error.Clear n try again";
        }
    }
    void two()
    {
        try
        {

            if (input_field == "0" && input_field != null)
                input_field = "2";
            else
                input_field =input_field + "2";
        }
        catch(Exception ex)
        {
            input_field = "Error.Clear n try again";
        }

    }
    void three()
    {
        try
        {

            if (input_field == "0" && input_field != null)
                input_field = "3";
            else
                input_field =input_field + "3";
        }
        catch(Exception ex)
        {
            input_field = "Error.Clear n try again";
        }

    }
    void four()
    {
        try
        {

            if (input_field == "0" && input_field != null)
                input_field = "4";
            else
                input_field =input_field + "4";
        }
        catch(Exception ex)
        {
            input_field = "Error.Clear n try again";
        }
    }
    void five()
    {
        try
        {

            if (input_field == "0" && input_field != null)
                input_field = "5";
            else
                input_field =input_field + "5";
        }
        catch(Exception ex)
        {
            input_field = "Error.Clear n try again";
        }
    }
    void six()
    {
        try
        {

            if (input_field == "0" && input_field != null)
                input_field = "6";
            else
                input_field =input_field + "6";
        }
        catch(Exception ex)
        {
            input_field = "Error.Clear n try again";
        }
    }
    void seven()
    {
        try
        {

            if (input_field == "0" && input_field != null)
                input_field = "7";
            else
                input_field =input_field + "7";
        }
        catch(Exception ex)
        {
            input_field = "Error.Clear n try again";
        }
    }
    void eight()
    {
        try
        {

            if (input_field == "0" && input_field != null)
                input_field = "8";
            else
                input_field =input_field + "8";
        }
        catch(Exception ex)
        {
            input_field = "Error.Clear n try again";
        }
    }
    void nine()
    {
        try
        {

            if (input_field == "0" && input_field != null)
                input_field = "9";
            else
                input_field =input_field + "9";
        }
        catch(Exception ex)
        {
            input_field = "Error.Clear n try again";
        }
    }
    void plus()
    {
        try
        {
            input_field = input_field + "+";
        }
        catch(Exception ex)
        {
            
            input_field = "Error.Clear n try again";
        }

    }
    void minus()
    {
                try
        {
            input_field = input_field + "-";
        }
        catch(Exception ex)
        {
            
            input_field = "Error.Clear n try again";
        }
    }
    void divide()
    {
                try
        {
            input_field = input_field + "/";
        }
        catch(Exception ex)
        {
            
            input_field = "Error.Clear n try again";
        }

    }
    void multiply()
    {
                try
        {
            input_field = input_field + "*";
        }
        catch(Exception ex)
        {
            
            input_field = "Error.Clear n try again";
        }
    }

    void dot()
    {

                try
        {
            input_field = input_field + ".";
        }
        catch(Exception ex)
        {
            
            input_field = "Error.Clear n try again";
        }
    }
    void delete()
    {
        input_field = "0";
        //if (input_field != null && input_field != "0")
        //{
        //    if (input_field.Length > 1)
        //        input_field = input_field.Substring(0, (input_field.Length- 1));
        //    else
        //    {
        //        input_field = "0";
        //    }
        //}
    }
    void equal()
    {
        double results = Evaluate(input_field);
        input_field = Convert.ToString(results);
    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager _navigation { get; set; }
    }
}
#pragma warning restore 1591
